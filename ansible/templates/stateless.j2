---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "{{ volumen.nombre }}"
  namespace: "{{ namespaceaks }}"
spec: 
  storageClassName: managed-csi
  resources:
    requests:
      storage: "{{ volumen.capacidad }}"
  accessModes:
  - ReadWriteOnce

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ serviceaccount.name }}"
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ serviceaccount.name }}"
  namespace: "{{ namespaceaks }}"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ serviceaccount.name }}"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "{{ serviceaccount.name }}"
subjects:
- kind: ServiceAccount
  name: "{{ serviceaccount.name }}"
  namespace: "{{ namespaceaks }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ aplicacion.nombre }}"
  namespace: "{{ namespaceaks }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ aplicacion.nombre }}"
  template:
    metadata:
      labels:
        app: "{{ aplicacion.nombre }}"
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      securityContext:
            fsGroup: 1000
            runAsUser: 1000
            privileged: true
      serviceAccountName: "{{ serviceaccount.name }}"
      containers:
      - name: "{{ aplicacion.nombre }}"
        image: "{{ aplicacion.imagen }}"
        resources:
            requests:
                cpu: "{{ aplicacion.recursos.cpu }}"
                memory: "{{ aplicacion.recursos.memoria }}"
            limits:
                cpu: "{{ aplicacion.limites.cpu }}"
                memory: "{{ aplicacion.limites.memoria }}"
        ports:
          - name: http-jenkins
            containerPort: {{ aplicacion.puerto }}
          - name: jnlp-port
            containerPort: 50000
            
        volumeMounts:
        - name: jenkins-vol
          mountPath: /var/jenkins_home
      volumes:
      - name: jenkins-vol
        persistentVolumeClaim:
          claimName: "{{volumen.nombre}}"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ aplicacion.nombre }}"
  namespace: "{{ namespaceaks }}"
spec:
  type: LoadBalancer
  ports:
  - port: {{ aplicacion.puerto }}
  selector:
    app: "{{ aplicacion.nombre }}"

